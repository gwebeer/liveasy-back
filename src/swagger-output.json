{
  "swagger": "2.0",
  "info": {
    "title": "LivEasy API Documentation",
    "description": "This is the API documentation about LivEasy-BackEnd",
    "version": "1.0.0"
  },
  "host": "localhost:4000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/calendar/reminder/add": {
      "post": {
        "tags": [
          "calendarReminderController"
        ],
        "description": "Função que o usuário cria um novo lembrete no calendário.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalendarReminderSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "64da742da876e905b9b149a2"
                },
                "planningcostitem": {
                  "type": "string",
                  "example": "ObjectId()"
                },
                "initialDate": {
                  "type": "string",
                  "example": "2023-07-21"
                },
                "finalDate": {
                  "type": "string",
                  "example": "2023-08-21"
                },
                "repeat": {
                  "type": "boolean",
                  "example": true
                },
                "repeatEvery": {
                  "type": "number",
                  "example": 30
                },
                "_id": {
                  "type": "string",
                  "example": "64de7268956dcb624aca8b41"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:18:00.795Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:18:00.795Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {}
                    },
                    "_message": {
                      "type": "string",
                      "example": "ErrorMessageExample"
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "ErrorMessageExample: some message error here"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/calendar/reminder/{id}": {
      "get": {
        "tags": [
          "calendarReminderController"
        ],
        "description": "Função que o usuário pega um ou vários itens do calendário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "64de7268956dcb624aca8b41"
                  },
                  "user": {
                    "type": "string",
                    "example": "64da742da876e905b9b149a2"
                  },
                  "planningcostitem": {
                    "type": "string",
                    "example": "ObjectId()"
                  },
                  "initialDate": {
                    "type": "string",
                    "example": "2023-07-21"
                  },
                  "finalDate": {
                    "type": "string",
                    "example": "2023-08-21"
                  },
                  "repeat": {
                    "type": "boolean",
                    "example": true
                  },
                  "repeatEvery": {
                    "type": "number",
                    "example": 30
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2023-08-17T19:18:00.795Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2023-08-17T19:18:00.795Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi(ram) encontrado(s) lembrete(s) no calendário."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "calendarReminderController"
        ],
        "description": "Função que o usuário atualiza o lembrete do calendário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "initialDate": {
                  "type": "string",
                  "example": "2023-07-21"
                },
                "finalDate": {
                  "type": "string",
                  "example": "2023-08-21"
                },
                "repeat": {
                  "type": "boolean",
                  "example": true
                },
                "repeatEvery": {
                  "type": "number",
                  "example": 30
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "calendarReminderController"
        ],
        "description": "Função que o usuário deleta um lembrete do calendário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de7268956dcb624aca8b41"
                },
                "user": {
                  "type": "string",
                  "example": "64da742da876e905b9b149a2"
                },
                "planningcostitem": {
                  "type": "string",
                  "example": "ObjectId()"
                },
                "initialDate": {
                  "type": "string",
                  "example": "2023-07-21"
                },
                "finalDate": {
                  "type": "string",
                  "example": "2023-08-21"
                },
                "repeat": {
                  "type": "boolean",
                  "example": true
                },
                "repeatEvery": {
                  "type": "number",
                  "example": 30
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:18:00.795Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:18:00.795Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi encontrado lembrete no calendário."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/property/choosed/add": {
      "post": {
        "tags": [
          "choosedPropertyController"
        ],
        "description": "Função que o usuário adiciona uma propriedade escolhida.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChoosedPropertySchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "64d93e582de00e40576bfa5c"
                },
                "property": {
                  "type": "string",
                  "example": "64e765f2c44ed036878be8cf"
                },
                "reason": {
                  "type": "string",
                  "example": "Perfeito para mim, pois moro sozinho."
                },
                "_id": {
                  "type": "string",
                  "example": "64e77cc77cc55538c4e4facf"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-24T15:52:39.883Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-24T15:52:39.883Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {}
                    },
                    "_message": {
                      "type": "string",
                      "example": "ErrorMessageExample"
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "ErrorMessageExample: some message error here"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/property/choosed/{id}": {
      "get": {
        "tags": [
          "choosedPropertyController"
        ],
        "description": "Função que o usuário busca por uma ou várias propriedades escolhidas.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "example": "64d93e582de00e40576bfa5c"
                  },
                  "property": {
                    "type": "string",
                    "example": "64e765f2c44ed036878be8cf"
                  },
                  "reason": {
                    "type": "string",
                    "example": "Perfeito para mim, pois moro sozinho."
                  },
                  "_id": {
                    "type": "string",
                    "example": "64e77cc77cc55538c4e4facf"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2023-08-24T15:52:39.883Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2023-08-24T15:52:39.883Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi(ram) encontrada(s) propriedade(s) escolhida(s)."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "choosedPropertyController"
        ],
        "description": "Função que o usuário atualiza uma propriedade escolhida.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Perfeito para mim, pois moro sozinho."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "64d93e582de00e40576bfa5c"
                },
                "property": {
                  "type": "string",
                  "example": "64e765f2c44ed036878be8cf"
                },
                "reason": {
                  "type": "string",
                  "example": "Perfeito para mim, pois moro sozinho."
                },
                "_id": {
                  "type": "string",
                  "example": "64e77cc77cc55538c4e4facf"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-24T15:52:39.883Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-24T15:52:39.883Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "choosedPropertyController"
        ],
        "description": "Função que o usuário exclui uma propriedade escolhida.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "64d93e582de00e40576bfa5c"
                },
                "property": {
                  "type": "string",
                  "example": "64e765f2c44ed036878be8cf"
                },
                "reason": {
                  "type": "string",
                  "example": "Perfeito para mim, pois moro sozinho."
                },
                "_id": {
                  "type": "string",
                  "example": "64e77cc77cc55538c4e4facf"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-24T15:52:39.883Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-24T15:52:39.883Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi encontrada propriedade escolhida."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/list/item/add": {
      "post": {
        "tags": [
          "itemListController"
        ],
        "description": "Função que o usuário cria um novo item personalizado.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemListSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "priority": {
                  "type": "string",
                  "example": "Média"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "value": {
                  "type": "number",
                  "example": 2500
                },
                "bought": {
                  "type": "boolean",
                  "example": true
                },
                "valuePaid": {
                  "type": "number",
                  "example": 2490.9
                },
                "boughtDate": {
                  "type": "string",
                  "example": "2022-10-12"
                },
                "process": {
                  "type": "string",
                  "example": "64dc0f8167f66149a8d49f97"
                },
                "_id": {
                  "type": "string",
                  "example": "64de6f1c01d3e90f1dd55ce3"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:03:56.306Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:03:56.306Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {}
                    },
                    "_message": {
                      "type": "string",
                      "example": "ErrorMessageExample"
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "ErrorMessageExample: some message error here"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/list/item/{id}": {
      "get": {
        "tags": [
          "itemListController"
        ],
        "description": "Função que o usuário busca por um ou vários itens personalizados.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "64de6f1c01d3e90f1dd55ce3"
                  },
                  "title": {
                    "type": "string",
                    "example": "Sofá"
                  },
                  "priority": {
                    "type": "string",
                    "example": "Média"
                  },
                  "category": {
                    "type": "string",
                    "example": ""
                  },
                  "convenient": {
                    "type": "string",
                    "example": "Sala"
                  },
                  "value": {
                    "type": "number",
                    "example": 2500
                  },
                  "bought": {
                    "type": "boolean",
                    "example": true
                  },
                  "valuePaid": {
                    "type": "number",
                    "example": 2490.9
                  },
                  "boughtDate": {
                    "type": "string",
                    "example": "2022-10-12"
                  },
                  "process": {
                    "type": "string",
                    "example": "64dc0f8167f66149a8d49f97"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2023-08-17T19:03:56.306Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2023-08-17T19:03:56.306Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi(ram) encontrado(s) item(ns) personalizado(s)."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "itemListController"
        ],
        "description": "Função que o usuário atualiza um item personalizado.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "priority": {
                  "type": "string",
                  "example": "Média"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "value": {
                  "type": "number",
                  "example": 2500
                },
                "bought": {
                  "type": "boolean",
                  "example": true
                },
                "valuePaid": {
                  "type": "number",
                  "example": 2490.9
                },
                "boughtDate": {
                  "type": "string",
                  "example": "2022-10-12"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "priority": {
                  "type": "string",
                  "example": "Média"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "value": {
                  "type": "number",
                  "example": 2500
                },
                "bought": {
                  "type": "boolean",
                  "example": true
                },
                "valuePaid": {
                  "type": "number",
                  "example": 2490.9
                },
                "boughtDate": {
                  "type": "string",
                  "example": "2022-10-12"
                },
                "process": {
                  "type": "string",
                  "example": "64dc0f8167f66149a8d49f97"
                },
                "_id": {
                  "type": "string",
                  "example": "64de6f1c01d3e90f1dd55ce3"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:03:56.306Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:03:56.306Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "itemListController"
        ],
        "description": "Função que o usuário deleta um item personalizado.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de6f1c01d3e90f1dd55ce3"
                },
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "priority": {
                  "type": "string",
                  "example": "Média"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "value": {
                  "type": "number",
                  "example": 2500
                },
                "bought": {
                  "type": "boolean",
                  "example": true
                },
                "valuePaid": {
                  "type": "number",
                  "example": 2490.9
                },
                "boughtDate": {
                  "type": "string",
                  "example": "2022-10-12"
                },
                "process": {
                  "type": "string",
                  "example": "64dc0f8167f66149a8d49f97"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:03:56.306Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:03:56.306Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi encontrado item personalizado."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/property/give-up/add": {
      "post": {
        "tags": [
          "giveUpPropertyController"
        ],
        "description": "Função que o usuário adiciona uma propriedade recusada.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GiveUpPropertySchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "64d93e582de00e40576bfa5c"
                },
                "property": {
                  "type": "string",
                  "example": "64e765f2c44ed036878be8cf"
                },
                "reason": {
                  "type": "string",
                  "example": "Muito caro para alugar"
                },
                "_id": {
                  "type": "string",
                  "example": "64e77a8005a87c1383796e46"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-24T15:42:56.082Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-24T15:42:56.082Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {}
                    },
                    "_message": {
                      "type": "string",
                      "example": "ErrorMessageExample"
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "ErrorMessageExample: some message error here"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/property/give-up/{id}": {
      "get": {
        "tags": [
          "giveUpPropertyController"
        ],
        "description": "Função que o usuário busca por uma ou várias propriedades recusadas.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "example": "64d93e582de00e40576bfa5c"
                  },
                  "property": {
                    "type": "string",
                    "example": "64e765f2c44ed036878be8cf"
                  },
                  "reason": {
                    "type": "string",
                    "example": "Muito caro para alugar"
                  },
                  "_id": {
                    "type": "string",
                    "example": "64e77a8005a87c1383796e46"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2023-08-24T15:42:56.082Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2023-08-24T15:42:56.082Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi(ram) encontrado(s) propriedade(s) recusada(s)."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "giveUpPropertyController"
        ],
        "description": "Função que o usuário atualiza uma propriedade recusada.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Muito caro para alugar"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "64d93e582de00e40576bfa5c"
                },
                "property": {
                  "type": "string",
                  "example": "64e765f2c44ed036878be8cf"
                },
                "reason": {
                  "type": "string",
                  "example": "Muito caro para alugar"
                },
                "_id": {
                  "type": "string",
                  "example": "64e77a8005a87c1383796e46"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-24T15:42:56.082Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-24T15:42:56.082Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "giveUpPropertyController"
        ],
        "description": "Função que o usuário exclui uma propriedade recusada.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "64d93e582de00e40576bfa5c"
                },
                "property": {
                  "type": "string",
                  "example": "64e765f2c44ed036878be8cf"
                },
                "reason": {
                  "type": "string",
                  "example": "Muito caro para alugar"
                },
                "_id": {
                  "type": "string",
                  "example": "64e77a8005a87c1383796e46"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-24T15:42:56.082Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-24T15:42:56.082Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi encontrado propriedade recusada."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/property/add": {
      "post": {
        "tags": [
          "idealPropertyController"
        ],
        "description": "Função que o usuário adiciona dados de uma propriedade ideal.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdealPropertySchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "ObjectId()"
                },
                "peopleLiving": {
                  "type": "number",
                  "example": 1
                },
                "type": {
                  "type": "string",
                  "example": "Apartamento"
                },
                "rooms": {
                  "type": "number",
                  "example": 2
                },
                "bathrooms": {
                  "type": "number",
                  "example": 2
                },
                "parkingSpaces": {
                  "type": "number",
                  "example": 1
                },
                "infraestructure": {
                  "type": "boolean",
                  "example": true
                },
                "furnished": {
                  "type": "boolean",
                  "example": true
                },
                "priceRange": {
                  "type": "number",
                  "example": 1000
                },
                "isForRent": {
                  "type": "boolean",
                  "example": true
                },
                "_id": {
                  "type": "string",
                  "example": "64de635a21d6b023c4b73ffb"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T18:13:46.777Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T18:13:46.777Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {}
                    },
                    "_message": {
                      "type": "string",
                      "example": "ErrorMessageExample"
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "ErrorMessageExample: some message error here"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/property/{id}": {
      "get": {
        "tags": [
          "idealPropertyController"
        ],
        "description": "Função que o usuário busca um ou vários dados de uma propriedade ideal.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "64de64b9af518a8c10f34f7d"
                  },
                  "user": {
                    "type": "string",
                    "example": "ObjectId()"
                  },
                  "peopleLiving": {
                    "type": "number",
                    "example": 1
                  },
                  "type": {
                    "type": "string",
                    "example": "Apartamento"
                  },
                  "rooms": {
                    "type": "number",
                    "example": 2
                  },
                  "bathrooms": {
                    "type": "number",
                    "example": 2
                  },
                  "parkingSpaces": {
                    "type": "number",
                    "example": 1
                  },
                  "infraestructure": {
                    "type": "boolean",
                    "example": true
                  },
                  "furnished": {
                    "type": "boolean",
                    "example": true
                  },
                  "priceRange": {
                    "type": "number",
                    "example": 1000
                  },
                  "isForRent": {
                    "type": "boolean",
                    "example": true
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2023-08-17T18:19:37.099Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2023-08-17T18:19:37.099Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi(ram) encontrado(s) os dados da propriedade ideal."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "idealPropertyController"
        ],
        "description": "Função que o usuário atualiza os dados de uma propriedade ideal.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "peopleLiving": {
                  "type": "number",
                  "example": 1
                },
                "type": {
                  "type": "string",
                  "example": "Apartamento"
                },
                "rooms": {
                  "type": "number",
                  "example": 2
                },
                "bathrooms": {
                  "type": "number",
                  "example": 2
                },
                "parkingSpaces": {
                  "type": "number",
                  "example": 1
                },
                "infraestructure": {
                  "type": "boolean",
                  "example": true
                },
                "furnished": {
                  "type": "boolean",
                  "example": true
                },
                "priceRange": {
                  "type": "number",
                  "example": 1000
                },
                "isForRent": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de64b9af518a8c10f34f7d"
                },
                "user": {
                  "type": "string",
                  "example": "ObjectId()"
                },
                "peopleLiving": {
                  "type": "number",
                  "example": 1
                },
                "type": {
                  "type": "string",
                  "example": "Apartamento"
                },
                "rooms": {
                  "type": "number",
                  "example": 2
                },
                "bathrooms": {
                  "type": "number",
                  "example": 2
                },
                "parkingSpaces": {
                  "type": "number",
                  "example": 1
                },
                "infraestructure": {
                  "type": "boolean",
                  "example": true
                },
                "furnished": {
                  "type": "boolean",
                  "example": true
                },
                "priceRange": {
                  "type": "number",
                  "example": 1000
                },
                "isForRent": {
                  "type": "boolean",
                  "example": true
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T18:19:37.099Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T18:19:37.099Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "idealPropertyController"
        ],
        "description": "Função que o usuário deleta os dados de uma propriedade ideal.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de64b9af518a8c10f34f7d"
                },
                "name": {
                  "type": "string",
                  "example": "Edifício Behelit"
                },
                "address": {
                  "type": "string",
                  "example": "Avenida dos Sonhos, 861"
                },
                "zipCode": {
                  "type": "string",
                  "example": "70707-848"
                },
                "neighborhood": {
                  "type": "string",
                  "example": "Flores"
                },
                "condominiumValue": {
                  "type": "number",
                  "example": 1000
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T18:19:37.099Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T18:19:37.099Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi encontrado os dados da propriedade ideal."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/list/cost/item/add": {
      "post": {
        "tags": [
          "costItemListController"
        ],
        "description": "Função que o usuário cria um novo item de planejamento de custos.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostItemListSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "process": {
                  "type": "string",
                  "example": "64de5f45cf79a38afca5a165"
                },
                "title": {
                  "type": "string",
                  "example": "Aluguel"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "value": {
                  "type": "number",
                  "example": 850
                },
                "_id": {
                  "type": "string",
                  "example": "64de5f56cf79a38afca5a167"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T17:56:38.273Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T17:56:38.273Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {}
                    },
                    "_message": {
                      "type": "string",
                      "example": "ErrorMessageExample"
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "ErrorMessageExample: some message error here"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/list/cost/item/{id}": {
      "get": {
        "tags": [
          "costItemListController"
        ],
        "description": "Função que o usuário busca por um ou vários itens de planejamento de custos.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "64de5f56cf79a38afca5a167"
                  },
                  "process": {
                    "type": "string",
                    "example": "64de5f45cf79a38afca5a165"
                  },
                  "title": {
                    "type": "string",
                    "example": "Aluguel"
                  },
                  "category": {
                    "type": "string",
                    "example": ""
                  },
                  "value": {
                    "type": "number",
                    "example": 850
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2023-08-17T17:56:38.273Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2023-08-17T17:56:38.273Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": ""
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi(ram) encontrado(s) o(s) planejamento(s) de custo."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "costItemListController"
        ],
        "description": "Função que o usuário atualiza um item do planejamento de custos.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Aluguel"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "value": {
                  "type": "number",
                  "example": 850
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de5f56cf79a38afca5a167"
                },
                "process": {
                  "type": "string",
                  "example": "64de5f45cf79a38afca5a165"
                },
                "title": {
                  "type": "string",
                  "example": "Aluguel"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "value": {
                  "type": "number",
                  "example": 850
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T17:56:38.273Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T17:56:38.273Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": ""
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "costItemListController"
        ],
        "description": "Função que o usuário deleta um item do planejamento de custos.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de5f56cf79a38afca5a167"
                },
                "process": {
                  "type": "string",
                  "example": "64de5f45cf79a38afca5a165"
                },
                "title": {
                  "type": "string",
                  "example": "Aluguel"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "value": {
                  "type": "number",
                  "example": 850
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T17:56:38.273Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T17:56:38.273Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": ""
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi encontrado o item de planejamento de custo."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/process/create": {
      "post": {
        "tags": [
          "processController"
        ],
        "description": "Função que o usuário cria um novo processo.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "64da742da876e905b9b149a2"
                },
                "step": {
                  "type": "string",
                  "example": "Planejamento"
                },
                "status": {
                  "type": "string",
                  "example": "Em progresso"
                },
                "_id": {
                  "type": "string",
                  "example": "64dc043391834dca8c01aacf"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-15T23:03:15.343Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-15T23:03:15.343Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {}
                    },
                    "_message": {
                      "type": "string",
                      "example": "Example error"
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example error: user: Message of the error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/process/{id}": {
      "get": {
        "tags": [
          "processController"
        ],
        "description": "Função que o usuário busca um ou vários processos.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "64dc043391834dca8c01aacf"
                  },
                  "user": {
                    "type": "string",
                    "example": "64da742da876e905b9b149a2"
                  },
                  "step": {
                    "type": "string",
                    "example": "Planejamento"
                  },
                  "status": {
                    "type": "string",
                    "example": "Em progresso"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2023-08-15T23:03:15.343Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2023-08-15T23:03:15.343Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": ""
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi(ram) encontrado(s) o(s) processo(s)."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "processController"
        ],
        "description": "Função que o usuário o usuário atualiza um processo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "step": {
                  "type": "string",
                  "example": "Planejamento"
                },
                "status": {
                  "type": "string",
                  "example": "Em progresso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64dc043391834dca8c01aacf"
                },
                "user": {
                  "type": "string",
                  "example": "64da742da876e905b9b149a2"
                },
                "step": {
                  "type": "string",
                  "example": "Planejamento"
                },
                "status": {
                  "type": "string",
                  "example": "Em progresso"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-15T23:03:15.343Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-15T23:03:15.343Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": ""
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "processController"
        ],
        "description": "Função que o usuário deleta um processo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64dc043391834dca8c01aacf"
                },
                "user": {
                  "type": "string",
                  "example": "64da742da876e905b9b149a2"
                },
                "step": {
                  "type": "string",
                  "example": "Planejamento"
                },
                "status": {
                  "type": "string",
                  "example": "Em progresso"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-15T23:03:15.343Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T14:34:09.866Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": ""
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi encontrado o processo."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/process/user/{id}": {
      "get": {
        "tags": [
          "processController - Functions"
        ],
        "description": "Função que o usuário busca os processos anexados ao usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64dc043391834dca8c01aacf"
                },
                "user": {
                  "type": "string",
                  "example": "64da742da876e905b9b149a2"
                },
                "step": {
                  "type": "string",
                  "example": "Planejamento"
                },
                "status": {
                  "type": "string",
                  "example": "Em progresso"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-15T23:03:15.343Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-15T23:03:15.343Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": ""
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi encontrado o usuário do processo."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/property/add": {
      "post": {
        "tags": [
          "propertyController"
        ],
        "description": "Função que o usuário adiciona uma nova propriedade.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PropertySchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Edifício Non Facile"
                },
                "address": {
                  "type": "string",
                  "example": "Rua dos Desafios, 352"
                },
                "zipCode": {
                  "type": "string",
                  "example": "70000-600"
                },
                "neighborhood": {
                  "type": "string",
                  "example": "Promessas"
                },
                "type": {
                  "type": "string",
                  "example": "Apartamento"
                },
                "rooms": {
                  "type": "number",
                  "example": 3
                },
                "bathrooms": {
                  "type": "number",
                  "example": 2
                },
                "parkingSpaces": {
                  "type": "number",
                  "example": 1
                },
                "infraestructure": {
                  "type": "boolean",
                  "example": true
                },
                "furnished": {
                  "type": "boolean",
                  "example": false
                },
                "isForRent": {
                  "type": "boolean",
                  "example": true
                },
                "value": {
                  "type": "number",
                  "example": 1200
                },
                "_id": {
                  "type": "string",
                  "example": "64e765f2c44ed036878be8cf"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T18:13:46.777Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T18:13:46.777Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {}
                    },
                    "_message": {
                      "type": "string",
                      "example": "ErrorMessageExample"
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "ErrorMessageExample: some message error here"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/property/{id}": {
      "get": {
        "tags": [
          "propertyController"
        ],
        "description": "Função que o usuário busca uma ou várias propriedades.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Edifício Non Facile"
                  },
                  "address": {
                    "type": "string",
                    "example": "Rua dos Desafios, 352"
                  },
                  "zipCode": {
                    "type": "string",
                    "example": "70000-600"
                  },
                  "neighborhood": {
                    "type": "string",
                    "example": "Promessas"
                  },
                  "type": {
                    "type": "string",
                    "example": "Apartamento"
                  },
                  "rooms": {
                    "type": "number",
                    "example": 3
                  },
                  "bathrooms": {
                    "type": "number",
                    "example": 2
                  },
                  "parkingSpaces": {
                    "type": "number",
                    "example": 1
                  },
                  "infraestructure": {
                    "type": "boolean",
                    "example": true
                  },
                  "furnished": {
                    "type": "boolean",
                    "example": false
                  },
                  "isForRent": {
                    "type": "boolean",
                    "example": true
                  },
                  "value": {
                    "type": "number",
                    "example": 1200
                  },
                  "_id": {
                    "type": "string",
                    "example": "64e765f2c44ed036878be8cf"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2023-08-17T18:13:46.777Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2023-08-17T18:13:46.777Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi(ram) encontrada(s) a(s) propriedade(s)."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "propertyController"
        ],
        "description": "Função que o usuário atualiza uma propriedade.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Edifício Non Facile"
                },
                "address": {
                  "type": "string",
                  "example": "Rua dos Desafios, 352"
                },
                "zipCode": {
                  "type": "string",
                  "example": "70000-600"
                },
                "neighborhood": {
                  "type": "string",
                  "example": "Promessas"
                },
                "type": {
                  "type": "string",
                  "example": "Apartamento"
                },
                "rooms": {
                  "type": "number",
                  "example": 3
                },
                "bathrooms": {
                  "type": "number",
                  "example": 2
                },
                "parkingSpaces": {
                  "type": "number",
                  "example": 1
                },
                "infraestructure": {
                  "type": "boolean",
                  "example": true
                },
                "furnished": {
                  "type": "boolean",
                  "example": false
                },
                "isForRent": {
                  "type": "boolean",
                  "example": true
                },
                "value": {
                  "type": "number",
                  "example": 1200
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64e765f2c44ed036878be8cf"
                },
                "name": {
                  "type": "string",
                  "example": "Edifício Non Facile"
                },
                "address": {
                  "type": "string",
                  "example": "Rua dos Desafios, 352"
                },
                "zipCode": {
                  "type": "string",
                  "example": "70000-600"
                },
                "neighborhood": {
                  "type": "string",
                  "example": "Promessas"
                },
                "type": {
                  "type": "string",
                  "example": "Apartamento"
                },
                "rooms": {
                  "type": "number",
                  "example": 3
                },
                "bathrooms": {
                  "type": "number",
                  "example": 2
                },
                "parkingSpaces": {
                  "type": "number",
                  "example": 1
                },
                "infraestructure": {
                  "type": "boolean",
                  "example": true
                },
                "furnished": {
                  "type": "boolean",
                  "example": false
                },
                "isForRent": {
                  "type": "boolean",
                  "example": true
                },
                "value": {
                  "type": "number",
                  "example": 1200
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-24T14:15:14.520Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-24T14:15:14.520Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "propertyController"
        ],
        "description": "Função que o usuário deleta uma propriedade.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de64b9af518a8c10f34f7d"
                },
                "name": {
                  "type": "string",
                  "example": "Edifício Non Facile"
                },
                "address": {
                  "type": "string",
                  "example": "Rua dos Desafios, 352"
                },
                "zipCode": {
                  "type": "string",
                  "example": "70000-600"
                },
                "neighborhood": {
                  "type": "string",
                  "example": "Promessas"
                },
                "type": {
                  "type": "string",
                  "example": "Apartamento"
                },
                "rooms": {
                  "type": "number",
                  "example": 3
                },
                "bathrooms": {
                  "type": "number",
                  "example": 2
                },
                "parkingSpaces": {
                  "type": "number",
                  "example": 1
                },
                "infraestructure": {
                  "type": "boolean",
                  "example": true
                },
                "furnished": {
                  "type": "boolean",
                  "example": false
                },
                "isForRent": {
                  "type": "boolean",
                  "example": true
                },
                "value": {
                  "type": "number",
                  "example": 1200
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T18:19:37.099Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T18:19:37.099Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi possível excluir a propriedade."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/property/item/add": {
      "post": {
        "tags": [
          "propertyItemController"
        ],
        "description": "Função que o usuário adiciona um novo item da propriedade.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PropertyItemSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "property": {
                  "type": "string",
                  "example": "64e765f2c44ed036878be8cf"
                },
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "_id": {
                  "type": "string",
                  "example": "64de6fdf956dcb624aca8b2f"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {}
                    },
                    "_message": {
                      "type": "string",
                      "example": "ErrorMessageExample"
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "ErrorMessageExample: some message error here"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/property/item/{id}": {
      "get": {
        "tags": [
          "propertyItemController"
        ],
        "description": "Função que o usuário busca por um ou vários itens da propriedade.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de6fdf956dcb624aca8b2f"
                },
                "property": {
                  "type": "string",
                  "example": "ObjectId()"
                },
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi(ram) encontrado(s) o(s) item(ns) da propriedade."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "propertyItemController"
        ],
        "description": "Função que o usuário atualiza um item da propriedade.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de6fdf956dcb624aca8b2f"
                },
                "property": {
                  "type": "string",
                  "example": "ObjectId()"
                },
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "propertyItemController"
        ],
        "description": "Função que o usuário deleta um item da propriedade.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de6fdf956dcb624aca8b2f"
                },
                "property": {
                  "type": "string",
                  "example": "ObjectId()"
                },
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "category": {
                  "type": "string",
                  "example": ""
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi possível excluir o item da propriedade."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/suggestion/item/create": {
      "post": {
        "tags": [
          "suggestionItemController"
        ],
        "description": "Função que adiciona um novo item de sugestão.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuggestionItemSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "Item"
                },
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "_id": {
                  "type": "string",
                  "example": "64de6fdf956dcb624aca8b2f"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {}
                    },
                    "_message": {
                      "type": "string",
                      "example": "ErrorMessageExample"
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "ErrorMessageExample: some message error here"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/suggestion/item/{id}": {
      "get": {
        "tags": [
          "suggestionItemController"
        ],
        "description": "Função que busca por um ou vários itens de sugestão.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de6fdf956dcb624aca8b2f"
                },
                "type": {
                  "type": "string",
                  "example": "Item"
                },
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi(ram) encontrado(s) o(s) item(ns) de sugestão."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "suggestionItemController"
        ],
        "description": "Função que atualiza um item de sugestão.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "Item"
                },
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64e6a2f5e0eb30192215fa11"
                },
                "type": {
                  "type": "string",
                  "example": "Item"
                },
                "title": {
                  "type": "string",
                  "example": "Sofá de 4 lugares"
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-24T00:23:17.744Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-24T00:23:17.744Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "suggestionItemController"
        ],
        "description": "Função que deleta um item de sugestão.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64de6fdf956dcb624aca8b2f"
                },
                "type": {
                  "type": "string",
                  "example": "Item"
                },
                "title": {
                  "type": "string",
                  "example": "Sofá"
                },
                "convenient": {
                  "type": "string",
                  "example": "Sala"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-17T19:07:11.829Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": ""
                    },
                    "valueType": {
                      "type": "string",
                      "example": ""
                    },
                    "kind": {
                      "type": "string",
                      "example": ""
                    },
                    "value": {
                      "type": "string",
                      "example": ""
                    },
                    "path": {
                      "type": "string",
                      "example": "_id"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Example of a Message Error"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Não foi encontrado o item de sugestão."
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "userController"
        ],
        "description": "Função que registra o usuário, pegando sua senha e passando em hash.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Irineu de Souza"
                },
                "email": {
                  "type": "string",
                  "example": "irineu@naosabe.com"
                },
                "birthDate": {
                  "type": "string",
                  "example": "14/01/2001"
                },
                "phone": {
                  "type": "string",
                  "example": "41999999999"
                },
                "password": {
                  "type": "string",
                  "example": "Minh@S3nh4"
                },
                "type": {
                  "type": "string",
                  "example": "customer"
                },
                "_id": {
                  "type": "string",
                  "example": "64d6c9cdb69b40992c075fcb"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-11T23:52:45.777Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-11T23:52:45.777Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "_message": {
                  "type": "string",
                  "example": "Error message."
                },
                "name": {
                  "type": "string",
                  "example": "ExampleError"
                },
                "message": {
                  "type": "string",
                  "example": "Error message: some message error here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "userController"
        ],
        "description": "Função que busca por um ou mais usuários.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Irineu de Souza"
                  },
                  "email": {
                    "type": "string",
                    "example": "irineu@naosabe.com"
                  },
                  "birthDate": {
                    "type": "string",
                    "example": "2001-01-14"
                  },
                  "phone": {
                    "type": "string",
                    "example": "41999999999"
                  },
                  "password": {
                    "type": "string",
                    "example": "Minh@S3nh4"
                  },
                  "type": {
                    "type": "string",
                    "example": "customer"
                  },
                  "_id": {
                    "type": "string",
                    "example": "64d6c9cdb69b40992c075fcb"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2023-08-11T23:52:45.777Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2023-08-11T23:52:45.777Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "_message": {
                  "type": "string",
                  "example": "Error message."
                },
                "name": {
                  "type": "string",
                  "example": "ExampleError"
                },
                "message": {
                  "type": "string",
                  "example": "Error message: some message error here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Usuário não encontrado"
                },
                "_return": {}
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "userController"
        ],
        "description": "Função que atualiza um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Irineu de Souza"
                },
                "email": {
                  "type": "string",
                  "example": "irineu@naosabe.com"
                },
                "birthDate": {
                  "type": "string",
                  "example": "14/01/2001"
                },
                "phone": {
                  "type": "string",
                  "example": "41999999999"
                },
                "password": {
                  "type": "string",
                  "example": "Minh@S3nh4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64d6c9cdb69b40992c075fcb"
                },
                "name": {
                  "type": "string",
                  "example": "Irineu de Souza"
                },
                "email": {
                  "type": "string",
                  "example": "irineu@naosabe.com"
                },
                "birthDate": {
                  "type": "string",
                  "example": "14/01/2001"
                },
                "phone": {
                  "type": "string",
                  "example": "41999999999"
                },
                "password": {
                  "type": "string",
                  "example": "Minh@S3nh4"
                },
                "type": {
                  "type": "string",
                  "example": "customer"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-11T23:52:45.777Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-11T23:52:45.777Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "_message": {
                  "type": "string",
                  "example": "Error message."
                },
                "name": {
                  "type": "string",
                  "example": "ExampleError"
                },
                "message": {
                  "type": "string",
                  "example": "Error message: some message error here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "userController"
        ],
        "description": "Função que deleta um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "64e75508a75edaf5c1cd4ed4"
                },
                "name": {
                  "type": "string",
                  "example": "Irineu Silveira"
                },
                "email": {
                  "type": "string",
                  "example": "irineu@naosabe.com"
                },
                "birthDate": {
                  "type": "string",
                  "example": "2001-01-14"
                },
                "phone": {
                  "type": "string",
                  "example": "41999999999"
                },
                "password": {
                  "type": "string",
                  "example": "$2a$10$UuKWQDu0gwDkwf6TkrySjuRehAJwAhMVbutd7ZskbQ8e9XZvkqI0S"
                },
                "type": {
                  "type": "string",
                  "example": "customer"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2023-08-24T13:03:04.137Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2023-08-24T13:07:45.205Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "example": "example"
                    },
                    "valueType": {
                      "type": "string",
                      "example": "example"
                    },
                    "kind": {
                      "type": "string",
                      "example": "example"
                    },
                    "value": {
                      "type": "string",
                      "example": "example"
                    },
                    "path": {
                      "type": "string",
                      "example": "example"
                    },
                    "reason": {
                      "type": "object",
                      "properties": {}
                    },
                    "name": {
                      "type": "string",
                      "example": "ExampleError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Error message: some message error here"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/validate-email/{id}": {
      "get": {
        "tags": [
          "userController - Functions"
        ],
        "description": "Função que valida se o e-mail solicitado existe.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "O e-mail já está cadastrado."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "_message": {
                  "type": "string",
                  "example": "Error message."
                },
                "name": {
                  "type": "string",
                  "example": "ExampleError"
                },
                "message": {
                  "type": "string",
                  "example": "Error message: some message error here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "O e-mail não está cadastrado"
                },
                "_return": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/auth/{id}": {
      "get": {
        "tags": [
          "userController - Functions"
        ],
        "description": "Função que autentica o usuário e usa o JWT.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Login aprovado"
                },
                "token": {
                  "type": "string",
                  "example": "<token>"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "_message": {
                  "type": "string",
                  "example": "Error message."
                },
                "name": {
                  "type": "string",
                  "example": "ExampleError"
                },
                "message": {
                  "type": "string",
                  "example": "Error message: some message error here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "A senha informada está inválida."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "O e-mail informado não está cadastrado."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/forgot-password/{id}": {
      "get": {
        "tags": [
          "userController - Functions"
        ],
        "description": "Função que envia um e-mail para o usuário cadastrado que tenha esquecido sua senha.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "_message": {
                  "type": "string",
                  "example": "Error message."
                },
                "name": {
                  "type": "string",
                  "example": "ExampleError"
                },
                "message": {
                  "type": "string",
                  "example": "Error message: some message error here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "O e-mail não está cadastrado."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "_message": {
                  "type": "string",
                  "example": "Error message."
                },
                "name": {
                  "type": "string",
                  "example": "ExampleError"
                },
                "message": {
                  "type": "string",
                  "example": "Error message: some message error here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CalendarReminderSchema": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "example": "ObjectId()"
        },
        "costItemList": {
          "type": "string",
          "example": "ObjectId()"
        },
        "initialDate": {
          "type": "string",
          "example": "2023-07-21"
        },
        "finalDate": {
          "type": "string",
          "example": "2023-08-21"
        },
        "repeat": {
          "type": "boolean",
          "example": true
        },
        "repeatEvery": {
          "type": "number",
          "example": 30
        }
      },
      "required": [
        "user",
        "costItemList",
        "initialDate",
        "repeat"
      ]
    },
    "ChoosedPropertySchema": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "example": "ObjectId()"
        },
        "property": {
          "type": "string",
          "example": "ObjectId()"
        },
        "reason": {
          "type": "string",
          "example": "Perfeito para mim, pois moro sozinho."
        }
      },
      "required": [
        "user",
        "property",
        "reason"
      ]
    },
    "ItemListSchema": {
      "type": "object",
      "properties": {
        "process": {
          "type": "string",
          "example": "ObjectId()"
        },
        "convenient": {
          "type": "string",
          "example": "Sala"
        },
        "category": {
          "type": "string",
          "example": ""
        },
        "title": {
          "type": "string",
          "example": "Sofá"
        },
        "priority": {
          "type": "string",
          "example": "Média"
        },
        "value": {
          "type": "number",
          "example": 2500
        },
        "bought": {
          "type": "boolean",
          "example": false
        },
        "valuePaid": {
          "type": "number",
          "example": 2490.9
        },
        "boughtDate": {
          "type": "string",
          "example": "2022-09-12"
        }
      },
      "required": [
        "process",
        "convenient",
        "category",
        "title",
        "priority",
        "value",
        "bought"
      ]
    },
    "GiveUpPropertySchema": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "example": "ObjectId()"
        },
        "property": {
          "type": "string",
          "example": "ObjectId()"
        },
        "reason": {
          "type": "string",
          "example": "Muito caro para alugar"
        }
      },
      "required": [
        "user",
        "property",
        "reason"
      ]
    },
    "IdealPropertySchema": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "example": "ObjectId()"
        },
        "peopleLiving": {
          "type": "number",
          "example": 1
        },
        "type": {
          "type": "string",
          "example": "Apartamento"
        },
        "rooms": {
          "type": "number",
          "example": 2
        },
        "bathrooms": {
          "type": "number",
          "example": 2
        },
        "parkingSpaces": {
          "type": "number",
          "example": 1
        },
        "infraestructure": {
          "type": "boolean",
          "example": true
        },
        "furnished": {
          "type": "boolean",
          "example": true
        },
        "priceRange": {
          "type": "number",
          "example": 1000
        },
        "isForRent": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "user",
        "peopleLiving",
        "type",
        "rooms",
        "bathrooms",
        "parkingSpaces",
        "infraestructure",
        "furnished",
        "priceRange",
        "isForRent"
      ]
    },
    "CostItemListSchema": {
      "type": "object",
      "properties": {
        "process": {
          "type": "string",
          "example": "ObjectId()"
        },
        "title": {
          "type": "string",
          "example": "Aluguel"
        },
        "category": {
          "type": "string",
          "example": ""
        },
        "value": {
          "type": "number",
          "example": 850
        }
      },
      "required": [
        "process",
        "title",
        "value"
      ]
    },
    "ProcessSchema": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "example": "ObjectId()"
        },
        "step": {
          "type": "string",
          "example": "Planejamento"
        },
        "status": {
          "type": "string",
          "example": "Iniciando"
        }
      },
      "required": [
        "user",
        "step",
        "status"
      ]
    },
    "PropertyItemSchema": {
      "type": "object",
      "properties": {
        "property": {
          "type": "string",
          "example": "ObjectId()"
        },
        "title": {
          "type": "string",
          "example": "Mesa de Jantar"
        },
        "category": {
          "type": "string",
          "example": ""
        },
        "convenient": {
          "type": "string",
          "example": "Sala de Jantar"
        }
      },
      "required": [
        "property",
        "title",
        "category",
        "convenient"
      ]
    },
    "PropertySchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Edifício Non Facile"
        },
        "address": {
          "type": "string",
          "example": "Rua dos Desafios, 352"
        },
        "zipCode": {
          "type": "string",
          "example": "70000-600"
        },
        "neighborhood": {
          "type": "string",
          "example": "Promessas"
        },
        "type": {
          "type": "string",
          "example": "Apartamento"
        },
        "rooms": {
          "type": "number",
          "example": 3
        },
        "bathrooms": {
          "type": "number",
          "example": 2
        },
        "parkingSpaces": {
          "type": "number",
          "example": 1
        },
        "infraestructure": {
          "type": "boolean",
          "example": true
        },
        "furnished": {
          "type": "boolean",
          "example": false
        },
        "isForRent": {
          "type": "boolean",
          "example": true
        },
        "value": {
          "type": "number",
          "example": 1200
        }
      },
      "required": [
        "name",
        "address",
        "zipCode",
        "neighborhood",
        "type",
        "rooms",
        "bathrooms",
        "parkingSpaces",
        "infraestructure",
        "furnished",
        "isForRent",
        "value"
      ]
    },
    "SuggestionItemSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "Item"
        },
        "title": {
          "type": "string",
          "example": "Sofá"
        },
        "category": {
          "type": "string",
          "example": ""
        },
        "convenient": {
          "type": "string",
          "example": "Sala"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "UserSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Irineu de Souza"
        },
        "email": {
          "type": "string",
          "example": "irineu@naosabe.com"
        },
        "birthDate": {
          "type": "string",
          "example": "2001-01-14"
        },
        "password": {
          "type": "string",
          "example": "Minh@S3nh4"
        },
        "type": {
          "type": "string",
          "example": "customer"
        },
        "phone": {
          "type": "string",
          "example": "41999999999"
        }
      },
      "required": [
        "name",
        "email",
        "birthDate",
        "password",
        "type",
        "phone"
      ]
    }
  }
}