{
  "swagger": "2.0",
  "info": {
    "title": "LivEasy API Documentation",
    "description": "This is the API documentation about LivEasy-BackEnd",
    "version": "1.0.0"
  },
  "host": "localhost:4000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/user/calendar/reminder/add": {
      "post": {
        "tags": [
          "calendarReminderController"
        ],
        "description": "Função que o usuário cria um novo lembrete no calendário.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CalendarReminderModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "user": "64da742da876e905b9b149a2",
              "planningcostitem": "ObjectId()",
              "initialDate": "2023-07-21",
              "finalDate": "2023-08-21",
              "repeat": true,
              "repeatEvery": 30,
              "_id": "64de7268956dcb624aca8b41",
              "createdAt": "2023-08-17T19:18:00.795Z",
              "updatedAt": "2023-08-17T19:18:00.795Z",
              "__v": 0
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          }
        }
      }
    },
    "/user/calendar/reminder/:id": {
      "get": {
        "tags": [
          "calendarReminderController"
        ],
        "description": "Função que o usuário pega um ou vários itens do calendário.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "_id": "64de7268956dcb624aca8b41",
              "user": "64da742da876e905b9b149a2",
              "planningcostitem": "ObjectId()",
              "initialDate": "2023-07-21",
              "finalDate": "2023-08-21",
              "repeat": true,
              "repeatEvery": 30,
              "createdAt": "2023-08-17T19:18:00.795Z",
              "updatedAt": "2023-08-17T19:18:00.795Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrado(s) lembrete(s) no calendário.", 
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "calendarReminderController"
        ],
        "description": "Função que o usuário atualiza o lembrete do calendário.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": false,
          "schema": {
            "initialDate": "2023-07-21",
            "finalDate": "2023-08-21",
            "repeat": true,
            "repeatEvery": 30
          }
        }],
        "responses": {
          "200": {

          },
          "400": {
            "schema": {
              "error": {
                "stringValue": "",
                "valueType": "",
                "kind": "",
                "value": "",
                "path": "_id",
                "reason": {},
                "name": "ExampleError",
                "message": "Example of a Message Error"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "calendarReminderController"
        ],
        "description": "Função que o usuário deleta um lembrete do calendário.",
        "responses": {
          "200": {
            "schema": {
              "_id": "64de7268956dcb624aca8b41",
              "user": "64da742da876e905b9b149a2",
              "planningcostitem": "ObjectId()",
              "initialDate": "2023-07-21",
              "finalDate": "2023-08-21",
              "repeat": true,
              "repeatEvery": 30,
              "createdAt": "2023-08-17T19:18:00.795Z",
              "updatedAt": "2023-08-17T19:18:00.795Z",
              "__v": 0
          }
          },
          "400": {
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi encontrado lembrete no calendário.", 
              "_return": null
            }
          }
        }
      }
    },

    "/user/property/choosed/add": {
      "post": {
        "tags": [
          "choosedPropertyController"
        ],
        "description": "Função que o usuário adiciona uma propriedade escolhida.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ChoosedPropertyModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "user": "64d93e582de00e40576bfa5c",
              "property": "64e765f2c44ed036878be8cf",
              "reason": "Perfeito para mim, pois moro sozinho.",
              "_id": "64e77cc77cc55538c4e4facf",
              "createdAt": "2023-08-24T15:52:39.883Z",
              "updatedAt": "2023-08-24T15:52:39.883Z",
              "__v": 0
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          }
        }
      }
    },
    "/user/property/choosed/:id": {
      "get": {
        "tags": [
          "choosedPropertyController"
        ],
        "description": "Função que o usuário busca por uma ou várias propriedades escolhidas.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "user": "64d93e582de00e40576bfa5c",
              "property": "64e765f2c44ed036878be8cf",
              "reason": "Perfeito para mim, pois moro sozinho.",
              "_id": "64e77cc77cc55538c4e4facf",
              "createdAt": "2023-08-24T15:52:39.883Z",
              "updatedAt": "2023-08-24T15:52:39.883Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrada(s) propriedade(s) escolhida(s).", 
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "choosedPropertyController"
        ],
        "description": "Função que o usuário atualiza uma propriedade escolhida.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": false,
          "schema": {
            "reason": "Perfeito para mim, pois moro sozinho."
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "user": "64d93e582de00e40576bfa5c",
              "property": "64e765f2c44ed036878be8cf",
              "reason": "Perfeito para mim, pois moro sozinho.",
              "_id": "64e77cc77cc55538c4e4facf",
              "createdAt": "2023-08-24T15:52:39.883Z",
              "updatedAt": "2023-08-24T15:52:39.883Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                "stringValue": "",
                "valueType": "",
                "kind": "",
                "value": "",
                "path": "_id",
                "reason": {},
                "name": "ExampleError",
                "message": "Example of a Message Error"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "choosedPropertyController"
        ],
        "description": "Função que o usuário exclui uma propriedade escolhida.",
        "responses": {
          "200": {
            "schema": {
              "user": "64d93e582de00e40576bfa5c",
              "property": "64e765f2c44ed036878be8cf",
              "reason": "Perfeito para mim, pois moro sozinho.",
              "_id": "64e77cc77cc55538c4e4facf",
              "createdAt": "2023-08-24T15:52:39.883Z",
              "updatedAt": "2023-08-24T15:52:39.883Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi encontrada propriedade escolhida.", 
              "_return": null
            }
          }
        }
      }
    },

    "/user/list/cost/item/add": {
      "post": {
        "tags": [
          "costItemListController"
        ],
        "description": "Função que o usuário cria um novo item de planejamento de custos.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CostItemListModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "process": "64de5f45cf79a38afca5a165",
              "title": "Aluguel",
              "category": "",
              "value": 850,
              "_id": "64de5f56cf79a38afca5a167",
              "createdAt": "2023-08-17T17:56:38.273Z",
              "updatedAt": "2023-08-17T17:56:38.273Z",
              "__v": 0
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          }
        }
      }
    },
    "/user/list/cost/item/:id": {
      "get": {
        "tags": [
          "costItemListController"
        ],
        "description": "Função que o usuário busca por um ou vários itens de planejamento de custos.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "_id": "64de5f56cf79a38afca5a167",
              "process": "64de5f45cf79a38afca5a165",
              "title": "Aluguel",
              "category": "",
              "value": 850,
              "createdAt": "2023-08-17T17:56:38.273Z",
              "updatedAt": "2023-08-17T17:56:38.273Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrado(s) o(s) planejamento(s) de custo.", 
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "costItemListController"
        ],
        "description": "Função que o usuário atualiza um item do planejamento de custos.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": false,
          "schema": {
            "title": "Aluguel",
            "category": "",
            "value": 850
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "_id": "64de5f56cf79a38afca5a167",
              "process": "64de5f45cf79a38afca5a165",
              "title": "Aluguel",
              "category": "",
              "value": 850,
              "createdAt": "2023-08-17T17:56:38.273Z",
              "updatedAt": "2023-08-17T17:56:38.273Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                "stringValue": "",
                "valueType": "",
                "kind": "",
                "value": "",
                "path": "_id",
                "reason": {},
                "name": "ExampleError",
                "message": "Example of a Message Error"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "costItemListController"
        ],
        "description": "Função que o usuário deleta um item do planejamento de custos.",
        "responses": {
          "200": {
            "schema": {
              "_id": "64de5f56cf79a38afca5a167",
              "process": "64de5f45cf79a38afca5a165",
              "title": "Aluguel",
              "category": "",
              "value": 850,
              "createdAt": "2023-08-17T17:56:38.273Z",
              "updatedAt": "2023-08-17T17:56:38.273Z",
              "__v": 0
          }
          },
          "400": {
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi encontrado o item de planejamento de custo.",
              "_return": null
            }
          }
        }
      }
    },

    "/user/property/give-up/add": {
      "post": {
        "tags": [
          "giveUpPropertyController"
        ],
        "description": "Função que o usuário adiciona uma propriedade recusada.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/GiveUpPropertyModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "user": "64d93e582de00e40576bfa5c",
              "property": "64e765f2c44ed036878be8cf",
              "reason": "Muito caro para alugar",
              "_id": "64e77a8005a87c1383796e46",
              "createdAt": "2023-08-24T15:42:56.082Z",
              "updatedAt": "2023-08-24T15:42:56.082Z",
              "__v": 0
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          }
        }
      }
    },
    "/user/property/give-up/:id": {
      "get": {
        "tags": [
          "giveUpPropertyController"
        ],
        "description": "Função que o usuário busca por uma ou várias propriedades recusadas.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "user": "64d93e582de00e40576bfa5c",
              "property": "64e765f2c44ed036878be8cf",
              "reason": "Muito caro para alugar",
              "_id": "64e77a8005a87c1383796e46",
              "createdAt": "2023-08-24T15:42:56.082Z",
              "updatedAt": "2023-08-24T15:42:56.082Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrado(s) propriedade(s) recusada(s).",
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "giveUpPropertyController"
        ],
        "description": "Função que o usuário atualiza uma propriedade recusada.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": false,
          "schema": {
            "reason": "Muito caro para alugar"
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "user": "64d93e582de00e40576bfa5c",
              "property": "64e765f2c44ed036878be8cf",
              "reason": "Muito caro para alugar",
              "_id": "64e77a8005a87c1383796e46",
              "createdAt": "2023-08-24T15:42:56.082Z",
              "updatedAt": "2023-08-24T15:42:56.082Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                "stringValue": "",
                "valueType": "",
                "kind": "",
                "value": "",
                "path": "_id",
                "reason": {},
                "name": "ExampleError",
                "message": "Example of a Message Error"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "giveUpPropertyController"
        ],
        "description": "Função que o usuário exclui uma propriedade recusada.",
        "responses": {
          "200": {
            "schema": {
              "user": "64d93e582de00e40576bfa5c",
              "property": "64e765f2c44ed036878be8cf",
              "reason": "Muito caro para alugar",
              "_id": "64e77a8005a87c1383796e46",
              "createdAt": "2023-08-24T15:42:56.082Z",
              "updatedAt": "2023-08-24T15:42:56.082Z",
              "__v": 0
          }
          },
          "400": {
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi encontrado propriedade recusada.",
              "_return": null
            }
          }
        }
      }
    },

    "/user/property/add": {
      "post": {
        "tags": [
          "idealPropertyController"
        ],
        "description": "Função que o usuário adiciona dados de uma propriedade ideal.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/IdealPropertyModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "user": "ObjectId()",
              "peopleLiving": 1,
              "type": "Apartamento",
              "rooms": 2,
              "bathrooms": 2,
              "parkingSpaces": 1,
              "infraestructure": true,
              "furnished": true,
              "priceRange": 1000,
              "isForRent": true,
              "_id": "64de635a21d6b023c4b73ffb",
              "createdAt": "2023-08-17T18:13:46.777Z",
              "updatedAt": "2023-08-17T18:13:46.777Z",
              "__v": 0
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          }
        }
      }
    },
    "/user/property/:id": {
      "get": {
        "tags": [
          "idealPropertyController"
        ],
        "description": "Função que o usuário busca um ou vários dados de uma propriedade ideal.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "_id": "64de64b9af518a8c10f34f7d",
              "user": "ObjectId()",
              "peopleLiving": 1,
              "type": "Apartamento",
              "rooms": 2,
              "bathrooms": 2,
              "parkingSpaces": 1,
              "infraestructure": true,
              "furnished": true,
              "priceRange": 1000,
              "isForRent": true,
              "createdAt": "2023-08-17T18:19:37.099Z",
              "updatedAt": "2023-08-17T18:19:37.099Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrado(s) os dados da propriedade ideal.",
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "idealPropertyController"
        ],
        "description": "Função que o usuário atualiza os dados de uma propriedade ideal.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": false,
          "schema": {
            "peopleLiving": 1,
            "type": "Apartamento",
            "rooms": 2,
            "bathrooms": 2,
            "parkingSpaces": 1,
            "infraestructure": true,
            "furnished": true,
            "priceRange": 1000,
            "isForRent": true
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "_id": "64de64b9af518a8c10f34f7d",
              "user": "ObjectId()",
              "peopleLiving": 1,
              "type": "Apartamento",
              "rooms": 2,
              "bathrooms": 2,
              "parkingSpaces": 1,
              "infraestructure": true,
              "furnished": true,
              "priceRange": 1000,
              "isForRent": true,
              "createdAt": "2023-08-17T18:19:37.099Z",
              "updatedAt": "2023-08-17T18:19:37.099Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                "stringValue": "",
                "valueType": "",
                "kind": "",
                "value": "",
                "path": "_id",
                "reason": {},
                "name": "ExampleError",
                "message": "Example of a Message Error"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "idealPropertyController"
        ],
        "description": "Função que o usuário deleta os dados de uma propriedade ideal.",
        "responses": {
          "200": {
            "schema": {
              "_id": "64de64b9af518a8c10f34f7d",
              "name": "Edifício Behelit",
              "address": "Avenida dos Sonhos, 861",
              "zipCode": "70707-848",
              "neighborhood": "Flores",
              "condominiumValue": 1000,
              "createdAt": "2023-08-17T18:19:37.099Z",
              "updatedAt": "2023-08-17T18:19:37.099Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi encontrado os dados da propriedade ideal.",
              "_return": null
            }
          }
        }
      }
    },

    "/user/list/item/add": {
      "post": {
        "tags": [
          "itemListController"
        ],
        "description": "Função que o usuário cria um novo item personalizado.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ItemListModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "title": "Sofá",
              "priority": "Média",
              "category": "",
              "convenient": "Sala",
              "value": 2500.00,
              "bought": true,
              "valuePaid": 2490.90,
              "boughtDate": "2022-10-12",
              "process": "64dc0f8167f66149a8d49f97",
              "_id": "64de6f1c01d3e90f1dd55ce3",
              "createdAt": "2023-08-17T19:03:56.306Z",
              "updatedAt": "2023-08-17T19:03:56.306Z",
              "__v": 0
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          }
        }
      }
    },
    "/user/list/item/:id": {
      "get": {
        "tags": [
          "itemListController"
        ],
        "description": "Função que o usuário busca por um ou vários itens personalizados.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "_id": "64de6f1c01d3e90f1dd55ce3",
              "title": "Sofá",
              "priority": "Média",
              "category": "",
              "convenient": "Sala",
              "value": 2500.00,
              "bought": true,
              "valuePaid": 2490.90,
              "boughtDate": "2022-10-12",
              "process": "64dc0f8167f66149a8d49f97",
              "createdAt": "2023-08-17T19:03:56.306Z",
              "updatedAt": "2023-08-17T19:03:56.306Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrado(s) item(ns) personalizado(s).",
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "itemListController"
        ],
        "description": "Função que o usuário atualiza um item personalizado.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": false,
          "schema": {
            "title": "Sofá",
            "priority": "Média",
            "category": "",
            "convenient": "Sala",
            "value": 2500,
            "bought": true,
            "valuePaid": 2490.9,
            "boughtDate": "2022-10-12"
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "title": "Sofá",
              "priority": "Média",
              "category": "",
              "convenient": "Sala",
              "value": 2500.00,
              "bought": true,
              "valuePaid": 2490.90,
              "boughtDate": "2022-10-12",
              "process": "64dc0f8167f66149a8d49f97",
              "_id": "64de6f1c01d3e90f1dd55ce3",
              "createdAt": "2023-08-17T19:03:56.306Z",
              "updatedAt": "2023-08-17T19:03:56.306Z",
              "__v": 0
          }
          },
          "400": {
            "schema": {
              "error": {
                "stringValue": "",
                "valueType": "",
                "kind": "",
                "value": "",
                "path": "_id",
                "reason": {},
                "name": "ExampleError",
                "message": "Example of a Message Error"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "itemListController"
        ],
        "description": "Função que o usuário deleta um item personalizado.",
        "responses": {
          "200": {
            "schema": {
              "_id": "64de6f1c01d3e90f1dd55ce3",
              "title": "Sofá",
              "priority": "Média",
              "category": "",
              "convenient": "Sala",
              "value": 2500.00,
              "bought": true,
              "valuePaid": 2490.90,
              "boughtDate": "2022-10-12",
              "process": "64dc0f8167f66149a8d49f97",
              "createdAt": "2023-08-17T19:03:56.306Z",
              "updatedAt": "2023-08-17T19:03:56.306Z",
              "__v": 0
          }
          },
          "400": {
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi encontrado item personalizado.", 
              "_return": null
            }
          }
        }
      }
    },

    "/user/process/create": {
      "post": {
        "tags": [
          "processController"
        ],
        "description": "Função que o usuário cria um novo processo.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ProcessModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "user": "64da742da876e905b9b149a2",
              "step": "Planejamento",
              "status": "Em progresso",
              "_id": "64dc043391834dca8c01aacf",
              "createdAt": "2023-08-15T23:03:15.343Z",
              "updatedAt": "2023-08-15T23:03:15.343Z",
              "__v": 0
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          }
        }
      }
    },
    "/user/process/:id": {
      "get": {
        "tags": [
          "processController"
        ],
        "description": "Função que o usuário busca um ou vários processos.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "_id": "64dc043391834dca8c01aacf",
              "user": "64da742da876e905b9b149a2",
              "step": "Planejamento",
              "status": "Em progresso",
              "createdAt": "2023-08-15T23:03:15.343Z",
              "updatedAt": "2023-08-15T23:03:15.343Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrado(s) o(s) processo(s).", 
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "processController"
        ],
        "description": "Função que o usuário o usuário atualiza um processo.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": false,
          "schema": {
            "step": "Planejamento",
            "status": "Em progresso"
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "_id": "64dc043391834dca8c01aacf",
              "user": "64da742da876e905b9b149a2",
              "step": "Planejamento",
              "status": "Em progresso",
              "createdAt": "2023-08-15T23:03:15.343Z",
              "updatedAt": "2023-08-15T23:03:15.343Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                "stringValue": "",
                "valueType": "",
                "kind": "",
                "value": "",
                "path": "_id",
                "reason": {},
                "name": "ExampleError",
                "message": "Example of a Message Error"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "processController"
        ],
        "description": "Função que o usuário deleta um processo.",
        "responses": {
          "200": {
            "schema": {
              "_id": "64dc043391834dca8c01aacf",
              "user": "64da742da876e905b9b149a2",
              "step": "Planejamento",
              "status": "Em progresso",
              "createdAt": "2023-08-15T23:03:15.343Z",
              "updatedAt": "2023-08-17T14:34:09.866Z",
              "__v": 0
          }
          },
          "400": {
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi encontrado o processo.", 
              "_return": null
            }
          }
        }
      }
    },
    "/user/process/user/:id": {
      "get": {
        "tags": [
          "processController - Functions"
        ],
        "description": "Função que o usuário busca os processos anexados ao usuário.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "_id": "64dc043391834dca8c01aacf",
              "user": "64da742da876e905b9b149a2",
              "step": "Planejamento",
              "status": "Em progresso",
              "createdAt": "2023-08-15T23:03:15.343Z",
              "updatedAt": "2023-08-15T23:03:15.343Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi encontrado o usuário do processo.", 
              "_return": null
            }
          }
        }
      }
    },

    "/property/add": {
      "post": {
        "tags": [
          "propertyController"
        ],
        "description": "Função que o usuário adiciona uma nova propriedade.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/PropertyModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "name": "Edifício Non Facile",
              "address": "Rua dos Desafios, 352",
              "zipCode": "70000-600",
              "neighborhood": "Promessas",
              "type": "Apartamento",
              "rooms": 3,
              "bathrooms": 2,
              "parkingSpaces": 1,
              "infraestructure": true,
              "furnished": false,
              "isForRent": true,
              "value": 1200,
              "_id": "64e765f2c44ed036878be8cf",
              "createdAt": "2023-08-17T18:13:46.777Z",
              "updatedAt": "2023-08-17T18:13:46.777Z",
              "__v": 0
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          }
        }
      }
    },
    "/property/:id": {
      "get": {
        "tags": [
          "propertyController"
        ],
        "description": "Função que o usuário busca uma ou várias propriedades.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "name": "Edifício Non Facile",
              "address": "Rua dos Desafios, 352",
              "zipCode": "70000-600",
              "neighborhood": "Promessas",
              "type": "Apartamento",
              "rooms": 3,
              "bathrooms": 2,
              "parkingSpaces": 1,
              "infraestructure": true,
              "furnished": false,
              "isForRent": true,
              "value": 1200,
              "_id": "64e765f2c44ed036878be8cf",
              "createdAt": "2023-08-17T18:13:46.777Z",
              "updatedAt": "2023-08-17T18:13:46.777Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrada(s) a(s) propriedade(s).", 
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "propertyController"
        ],
        "description": "Função que o usuário atualiza uma propriedade.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": false,
          "schema": {
            "name": "Edifício Non Facile",
            "address": "Rua dos Desafios, 352",
            "zipCode": "70000-600",
            "neighborhood": "Promessas",
            "type": "Apartamento",
            "rooms": 3,
            "bathrooms": 2,
            "parkingSpaces": 1,
            "infraestructure": true,
            "furnished": false,
            "isForRent": true,
            "value": 1200
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "_id": "64e765f2c44ed036878be8cf",
              "name": "Edifício Non Facile",
              "address": "Rua dos Desafios, 352",
              "zipCode": "70000-600",
              "neighborhood": "Promessas",
              "type": "Apartamento",
              "rooms": 3,
              "bathrooms": 2,
              "parkingSpaces": 1,
              "infraestructure": true,
              "furnished": false,
              "isForRent": true,
              "value": 1200,
              "createdAt": "2023-08-24T14:15:14.520Z",
              "updatedAt": "2023-08-24T14:15:14.520Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                "stringValue": "",
                "valueType": "",
                "kind": "",
                "value": "",
                "path": "_id",
                "reason": {},
                "name": "ExampleError",
                "message": "Example of a Message Error"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "propertyController"
        ],
        "description": "Função que o usuário deleta uma propriedade.",
        "responses": {
          "200": {
            "schema": {
              "_id": "64de64b9af518a8c10f34f7d",
              "name": "Edifício Non Facile",
              "address": "Rua dos Desafios, 352",
              "zipCode": "70000-600",
              "neighborhood": "Promessas",
              "type": "Apartamento",
              "rooms": 3,
              "bathrooms": 2,
              "parkingSpaces": 1,
              "infraestructure": true,
              "furnished": false,
              "isForRent": true,
              "value": 1200,
              "createdAt": "2023-08-17T18:19:37.099Z",
              "updatedAt": "2023-08-17T18:19:37.099Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi possível excluir a propriedade.", 
              "_return": null
            }
          }
        }
      }
    },

    "/property/item/add": {
      "post": {
        "tags": [
          "propertyItemController"
        ],
        "description": "Função que o usuário adiciona um novo item da propriedade.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/PropertyItemModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "property": "64e765f2c44ed036878be8cf",
              "title": "Sofá",
              "category": "",
              "convenient": "Sala",
              "_id": "64de6fdf956dcb624aca8b2f",
              "createdAt": "2023-08-17T19:07:11.829Z",
              "updatedAt": "2023-08-17T19:07:11.829Z",
              "__v": 0
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          }
        }
      }
    },
    "/propert/item/:id": {
      "get": {
        "tags": [
          "propertyItemController"
        ],
        "description": "Função que o usuário busca por um ou vários itens da propriedade.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "_id": "64de6fdf956dcb624aca8b2f",
              "property": "ObjectId()",
              "title": "Sofá",
              "category": "",
              "convenient": "Sala",
              "createdAt": "2023-08-17T19:07:11.829Z",
              "updatedAt": "2023-08-17T19:07:11.829Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrado(s) o(s) item(ns) da propriedade.", 
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "propertyItemController"
        ],
        "description": "Função que o usuário atualiza um item da propriedade.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": false,
          "schema": {
            "title": "Sofá",
            "category": "",
            "convenient": "Sala"
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "_id": "64de6fdf956dcb624aca8b2f",
              "property": "ObjectId()",
              "title": "Sofá",
              "category": "",
              "convenient": "Sala",
              "createdAt": "2023-08-17T19:07:11.829Z",
              "updatedAt": "2023-08-17T19:07:11.829Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                "stringValue": "",
                "valueType": "",
                "kind": "",
                "value": "",
                "path": "_id",
                "reason": {},
                "name": "ExampleError",
                "message": "Example of a Message Error"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "propertyItemController"
        ],
        "description": "Função que o usuário deleta um item da propriedade.",
        "responses": {
          "200": {
            "schema": {
              "_id": "64de6fdf956dcb624aca8b2f",
              "property": "ObjectId()",
              "title": "Sofá",
              "category": "",
              "convenient": "Sala",
              "createdAt": "2023-08-17T19:07:11.829Z",
              "updatedAt": "2023-08-17T19:07:11.829Z",
              "__v": 0
          }
          },
          "400": {
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi possível excluir o item da propriedade.", 
              "_return": null
            }
          }
        }
      }
    },

    "/suggestion/item/create": {
      "post": {
        "tags": [
          "suggestionItemController"
        ],
        "description": "Função que adiciona um novo item de sugestão.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/SuggestionItemModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "Item",
              "title": "Sofá",
              "convenient": "Sala",
              "_id": "64de6fdf956dcb624aca8b2f",
              "createdAt": "2023-08-17T19:07:11.829Z",
              "updatedAt": "2023-08-17T19:07:11.829Z",
              "__v": 0
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          }
        }
      }
    },
    "/suggestion/item/:id": {
      "get": {
        "tags": [
          "suggestionItemController"
        ],
        "description": "Função que busca por um ou vários itens de sugestão.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "_id": "64de6fdf956dcb624aca8b2f",
              "type": "Item",
              "title": "Sofá",
              "convenient": "Sala",
              "createdAt": "2023-08-17T19:07:11.829Z",
              "updatedAt": "2023-08-17T19:07:11.829Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrado(s) o(s) item(ns) de sugestão.", 
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "suggestionItemController"
        ],
        "description": "Função que atualiza um item de sugestão.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": false,
          "schema": {
            "type": "Item",
            "title": "Sofá",
            "convenient": "Sala"
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "_id": "64e6a2f5e0eb30192215fa11",
              "type": "Item",
              "title": "Sofá de 4 lugares",
              "convenient": "Sala",
              "createdAt": "2023-08-24T00:23:17.744Z",
              "updatedAt": "2023-08-24T00:23:17.744Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                "stringValue": "",
                "valueType": "",
                "kind": "",
                "value": "",
                "path": "_id",
                "reason": {},
                "name": "ExampleError",
                "message": "Example of a Message Error"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "suggestionItemController"
        ],
        "description": "Função que deleta um item de sugestão.",
        "responses": {
          "200": {
            "schema": {
              "_id": "64de6fdf956dcb624aca8b2f",
              "type": "Item",
              "title": "Sofá",
              "convenient": "Sala",
              "createdAt": "2023-08-17T19:07:11.829Z",
              "updatedAt": "2023-08-17T19:07:11.829Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": {
                  "stringValue": "",
                  "valueType": "",
                  "kind": "",
                  "value": "",
                  "path": "_id",
                  "reason": {},
                  "name": "ExampleError",
                  "message": "Example of a Message Error"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi encontrado o item de sugestão.", 
              "_return": null
            }
          }
        }
      }
    },

    "/user/validate-email/:email": {
      "post": {
        "tags": [
          "userController - Functions"
        ],
        "description": "Função que valida se o e-mail solicitado existe.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "message": "O e-mail já está cadastrado." 
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "error": {
                "errors": { },
                "_message": "ErrorMessageExample",
                "name": "ExampleError",
                "message": "ErrorMessageExample: some message error here"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "O e-mail não está cadastrado",
              "_return": null
            }
          }
        }
      }
    },
    "/user/auth/:email/:password": {
      "post": {
        "tags": [
          "userController - Functions"
        ],
        "description": "Função que autentica o usuário e usa o JWT.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "msg": "Login aprovado", 
              "token": "<token>"
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "errors": { },
              "_message": "Error message.",
              "name": "ExampleError",
              "message": "Error message: some message error here"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "msg": "O e-mail informado não está cadastrado."
            }
          }
        }
      }
    },
    "/user/forgot-password/:email": {
      "post": {
        "tags": [
          "userController - Functions"
        ],
        "description": "Função que envia um e-mail para o usuário cadastrado que tenha esquecido sua senha.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": { }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "errors": { },
              "_message": "Error message.",
              "name": "ExampleError",
              "message": "Error message: some message error here"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "msg": "O e-mail não está cadastrado."
            }
          },
          "500": {
            "schema": {
              "errors": { },
              "_message": "Error message.",
              "name": "ExampleError",
              "message": "Error message: some message error here"
            }
          }
        }
      }
    },
    "/user/reset-password/:id": {
      "put": {
        "tags": [
          "userController - Functions"
        ],
        "description": "Função que o usuário pega um ou vários itens do calendário.",
        "parameters": {
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "id": "",
            "email": ""
          } 
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "errors": { },
              "_message": "Error message.",
              "name": "ExampleError",
              "message": "Error message: some message error here"
          }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Não foi(ram) encontrado(s) lembrete(s) no calendário.", 
              "_return": null
            }
          }
        }
      }
    },

    "/user/register": {
      "post": {
        "tags": [
          "userController"
        ],
        "description": "Função que registra o usuário, pegando sua senha e passando em hash.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/UserModel"
          }
        }],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "name": "Irineu de Souza",
              "email": "irineu@naosabe.com",
              "birthDate": "14/01/2001",
              "phone": "41999999999",
              "password": "Minh@S3nh4",
              "type": "customer",
              "_id": "64d6c9cdb69b40992c075fcb",
              "createdAt": "2023-08-11T23:52:45.777Z",
              "updatedAt": "2023-08-11T23:52:45.777Z",
              "__v": 0
            } 
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "errors": { },
              "_message": "Error message.",
              "name": "ExampleError",
              "message": "Error message: some message error here"
            }
          }
        }
      }
    },
    "/user/:id": {
      "get": {
        "tags": [
          "userController"
        ],
        "description": "Função que busca por um ou mais usuários.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": [{
              "name": "Irineu de Souza",
              "email": "irineu@naosabe.com",
              "birthDate": "2001-01-14",
              "phone": "41999999999",
              "password": "Minh@S3nh4",
              "type": "customer",
              "_id": "64d6c9cdb69b40992c075fcb",
              "createdAt": "2023-08-11T23:52:45.777Z",
              "updatedAt": "2023-08-11T23:52:45.777Z",
              "__v": 0
            }]
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "errors": { },
              "_message": "Error message.",
              "name": "ExampleError",
              "message": "Error message: some message error here"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "message": "Usuário não encontrado",
              "_return": null
            }
          }
        }
      },
      "put": {
        "tags": [
          "userController"
        ],
        "description": "Função que atualiza um usuário.",
        "parameters": [{
          "name": "obj",
          "in": "body",
          "required": true,
          "schema": {
            "name": "Irineu de Souza",
            "email": "irineu@naosabe.com",
            "birthDate": "14/01/2001",
            "phone": "41999999999",
            "password": "Minh@S3nh4"
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "_id": "64d6c9cdb69b40992c075fcb",
              "name": "Irineu de Souza",
              "email": "irineu@naosabe.com",
              "birthDate": "14/01/2001",
              "phone": "41999999999",
              "password": "Minh@S3nh4",
              "type": "customer",
              "createdAt": "2023-08-11T23:52:45.777Z",
              "updatedAt": "2023-08-11T23:52:45.777Z",
              "__v": 0
            } 
          },
          "400": {
            "schema": {
              "errors": { },
              "_message": "Error message.",
              "name": "ExampleError",
              "message": "Error message: some message error here"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "userController"
        ],
        "description": "Função que deleta um usuário.",
        "responses": {
          "200": {
            "schema": {
              "_id": "64e75508a75edaf5c1cd4ed4",
              "name": "Irineu Silveira",
              "email": "irineu@naosabe.com",
              "birthDate": "2001-01-14",
              "phone": "41999999999",
              "password": "$2a$10$UuKWQDu0gwDkwf6TkrySjuRehAJwAhMVbutd7ZskbQ8e9XZvkqI0S",
              "type": "customer",
              "createdAt": "2023-08-24T13:03:04.137Z",
              "updatedAt": "2023-08-24T13:07:45.205Z",
              "__v": 0
            }
          },
          "400": {
            "schema": {
              "error": { 
                "stringValue": "example",
                "valueType": "example",
                "kind": "example",
                "value": "example",
                "path": "example",
                "reason": {},
                "name": "ExampleError",
                "message": "Error message: some message error here"
              }
            }
          },
          "404": {
            "schema": {
              "message": "Não foi encontrado lembrete no calendário.", 
              "_return": null
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CalendarReminderModel": {
      "$user": "ObjectId()",
      "$costItemList": "ObjectId()",
      "$initialDate": "2023-07-21",
      "finalDate": "2023-08-21",
      "$repeat": true,
      "repeatEvery": 30 
    },
    "ChoosedPropertyModel": {
      "$user": "ObjectId()",
      "$property": "ObjectId()",
      "$reason": "Perfeito para mim, pois moro sozinho."
    },
    "ItemListModel": {
      "$process": "ObjectId()",
      "$convenient": "Sala",
      "$category": "",
      "$title": "Sofá",
      "$priority": "Média",
      "$value": 2500.00,
      "$bought": false,
      "valuePaid": 2490.90,
      "boughtDate": "2022-09-12"
    },
    "GiveUpPropertyModel": {
      "$user": "ObjectId()",
      "$property": "ObjectId()",
      "$reason": "Muito caro para alugar"
    },
    "IdealPropertyModel": {
      "$user": "ObjectId()",
      "$peopleLiving": 1,
      "$type": "Apartamento",
      "$rooms": 2,
      "$bathrooms": 2,
      "$parkingSpaces": 1,
      "$infraestructure": true,
      "$furnished": true,
      "$priceRange": 1000.00,
      "$isForRent": true
    },
    "CostItemListModel": {
      "$process": "ObjectId()",
      "$title": "Aluguel",
      "category": "",
      "$value": 850.00
    },
    "ProcessModel": {
      "$user": "ObjectId()",
      "$step": "Planejamento",
      "$status": "Iniciando"
    },
    "PropertyItemModel": {
      "$property": "ObjectId()",
      "$title": "Mesa de Jantar",
      "$category": "",
      "$convenient": "Sala de Jantar" 
    },
    "PropertyModel": {
      "$name": "Edifício Non Facile",
      "$address": "Rua dos Desafios, 352",
      "$zipCode": "70000-600",
      "$neighborhood": "Promessas",
      "$type": "Apartamento",
      "$rooms": 3,
      "$bathrooms": 2,
      "$parkingSpaces": 1,
      "$infraestructure": true,
      "$furnished": false,
      "$isForRent": true,
      "$value": 1200.00
    },
    "SuggestionItemModel": {
      "$type": "Item",
      "$title": "Sofá",
      "category": "",
      "convenient": "Sala"
    },
    "UserModel": {
      "$name": "Irineu de Souza",
      "$email": "irineu@naosabe.com",
      "$birthDate": "2001-01-14",
      "$password": "Minh@S3nh4",
      "$type": "customer",
      "$phone": "41999999999"
    }
  }
}